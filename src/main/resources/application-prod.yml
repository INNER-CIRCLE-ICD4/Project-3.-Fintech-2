spring:
  application:
    name: easypay
  profiles:
    active: prod
  
  # PostgreSQL 설정
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/easypay}
    driver-class-name: org.postgresql.Driver
    username: ${SPRING_DATASOURCE_USERNAME:easypay}
    password: ${SPRING_DATASOURCE_PASSWORD:easypay123}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA 설정
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  
  # Redis 설정 (세션 저장소)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

# 서버 설정
server:
  port: 8090
  servlet:
    encoding:
      charset: UTF-8
      force: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# JWT 설정
jwt:
  secret: ${JWT_SECRET:your-production-secret-key-here-change-this-in-production}
  expiration:
    access: 3600000       # Access Token 유효 시간 (1시간)
    refresh: 2592000000   # Refresh Token 유효 시간 (30일)

# 로깅 설정
logging:
  level:
    root: WARN
    fintech2.easypay: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/easypay.log
    max-size: 100MB
    max-history: 30

# Actuator 설정 (모니터링)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# 캐시 설정
spring:
  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10분
      cache-null-values: false

# 보안 설정
security:
  require-ssl: true
  headers:
    frame-options: DENY
    content-type-options: nosniff
    xss-protection: "1; mode=block"
    hsts: "max-age=31536000; includeSubDomains"